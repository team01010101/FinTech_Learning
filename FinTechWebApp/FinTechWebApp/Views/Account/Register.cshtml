@model FinTechWebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

@*<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>

}*@

<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "login100-form validate-form p-l-55 p-r-55 p-t-178", role = "form"}))
            {
                @Html.AntiForgeryToken()
                <span class="login100-form-title">
                    Sign Up
                </span>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.TextBoxFor(m => m.UserId, new { @class = "input100", placeholder = "Identification" })
                    @*<input class="input100" type="text" name="username" placeholder="First name">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.TextBoxFor(m => m.Name, new { @class = "input100", placeholder = "First name" })
                    @*<input class="input100" type="text" name="username" placeholder="First name">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "input100", placeholder = "Last name" })
                    @*<input class="input100" type="text" name="username" placeholder="Last name">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.TextBoxFor(m => m.Username, new { @class = "input100", placeholder = "Username" })
                    @*<input class="input100" type="text" name="username" placeholder="Last name">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "input100", placeholder = "Email Address" })
                    @*<input class="input100" type="text" name="username" placeholder="email">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.PasswordFor(m => m.Password, new { @class = "input100", placeholder = "Password" })
                    @*<input class="input100" type="password" name="username" placeholder="Password">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-16" data-validate="Please enter username">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input100", placeholder = "Confirm Password" })
                    @*<input class="input100" type="password" name="username" placeholder="Password">*@
                    <span class="focus-input100"></span>
                </div>

                <div class="text-right p-t-13 p-b-23">
                    <span class="txt1">
                    </span>

                </div>

                <div class="container-login100-form-btn">
                    <input type="submit" class="login100-form-btn" value="Sign up" />
                    @*<button class="login100-form-btn">
                        Sign up
                    </button>*@
                </div>

                <div class="flex-col-c p-t-170 p-b-40">
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
